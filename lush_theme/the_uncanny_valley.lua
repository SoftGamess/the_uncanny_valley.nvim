-- call :Lushify
local lush = require("lush")
---@diagnostic disable
local hsl = lush.hsl
local hsluv = lush.hsluv
local theme = lush(function(injected_functions)
  local sym = injected_functions.sym
  return {
--    SpecialKey                                 { fg="#d7c483", },
    --Cursor                                     { fg = hsl(0,0,0), bg = hsl(160,100,60) },
    --TermCursor                                 { Cursor },
    --vCursor                                    { fg = hsl(0,0,0), bg = hsl(160,100,30) },
    --Normal                                     { bg = hsl(60,20,15) },
    --Visual                                     { bg = hsl(160,20,30) },
    --TelescopeSelection                         { Visual },
    --Search                                     { bg = hsl(160,20,30) },
    --Comment                                    { fg = hsl(0,0,40) },
    --sym"@lsp.type.comment"                     { Comment },
    --Constant                                   { fg = hsl(38,100,31), gui ="bold" },
    --sym"@constant"                             { Constant },
    --sym"@lsp.type.enumMember"                  { Constant },
    --StorageClass                               { Constant },
    --Structure                                  { Constant },
    --Typedef                                    { Constant },
    --NvimNumberPrefix                           { Constant },
    --NvimOptionSigil                            { Constant },
    --Type                                       { Constant },
    --sym"@type"                                 { Constant },
    --sym"@lsp.type.type"                        { Constant },
    --sym"@constant.builtin"                     { Constant },
    --sym"@function.builtin"                     { Constant },
    --sym"@constructor"                          { Constant },
    --Tag                                        { Constant },
    --Debug                                      { Constant },
    --vimHiAttri                                { Constant },
    --SpecialChar                                { Constant },
    --SpecialComment                             { Constant },
    --Special                                    { Constant },
    --sym"@parameter"                            { fg = hsl(55,100,70) },
    --sym"@lsp.type.parameter"                   { sym"@parameter" },
    --Identifier                                 { fg = hsl(55,100,50) },
    --sym"@field"                                { Identifier },
    --sym"@property"                             { Identifier },
    --sym"@variable"                             { Identifier },
    --sym"@namespace"                            { Identifier },
    --sym"@lsp.type.property"                    { Identifier },
    --sym"@lsp.type.variable"                    { Identifier },
    --NvimIdentifier                             { Identifier },
    --Delimiter                                  { fg = hsl(180,100,25) },
    --Operator                                   { Delimiter },
    --sym"@punctuation"                          { Delimiter },
    --NvimParenthesis                            { Delimiter },
    --NvimColon                                  { Delimiter },
    --NvimComma                                  { Delimiter },
    --NvimArrow                                  { Delimiter },
    --Keyword                                    { fg = hsl(180,60,70) },
    --PreProc                                    { Keyword },
    --Include                                    { Keyword },
    --Define                                     { Keyword },
    --Macro                                      { Keyword },
    --PreCondit                                  { Keyword },
    --sym"@preproc"                              { Keyword },
    --Function                                   { fg = hsl(40,100,60) },
    --sym"@function"                             { Function },
    --sym"@method"                               { Function },
    --sym"@lsp.type.decorator"                   { Function },
    --sym"@lsp.type.method"                      { Function },
    --sym"@lsp.type.function"                    { Function },
    --String                                     { fg = hsl(0,35,55) },
    --sym"@string"                               { String },
    --NvimString                                 { String },
    --DiagnosticVirtualTextError                 { fg = hsl(0,50,45) },
    --DiagnosticVirtualTextWarn                  { fg= hsl(80,50,40) },
    --DiagnosticVirtualTextInfo                  { fg = hsl(180,60,50) },
    --DiagnosticVirtualTextHint                  { fg = hsl(60,100,20) },
    --DiagnosticError                            { DiagnosticVirtualTextError },
    --DiagnosticWarn                             { DiagnosticVirtualTextWarn },
    --DiagnosticInfo                             { DiagnosticVirtualTextInfo },
    --DiagnosticHint                             { DiagnosticVirtualTextHint },
    --DiagnosticFloatingError                    { DiagnosticVirtualTextError },
    --DiagnosticFloatingWarn                     { DiagnosticVirtualTextWarn },
    --DiagnosticFloatingInfo                     { DiagnosticVirtualTextInfo },
    --DiagnosticFloatingHint                     { DiagnosticVirtualTextHint },
    --DiagnosticSignError                        { DiagnosticVirtualTextError },
    --DiagnosticSignWarn                         { DiagnosticVirtualTextWarn },
    --DiagnosticSignInfo                         { DiagnosticVirtualTextInfo },
    --DiagnosticSignHint                         { DiagnosticVirtualTextHint },
    --DiagnosticUnderlineError                   { underline= true },
    --DiagnosticUnderlineWarn                    { underline= true },
    --DiagnosticUnderlineInfo                    { underline= true },
    --DiagnosticUnderlineHint                    { underline= true },
    --TelescopeBorder                            { fg = hsl(55,100,80), bg = hsl(60,20,13) },
    --TelescopeResultBorder                      { TelescopeBorder },
    --TelescopePreviewBorder                     { TelescopeBorder },
    --TelescopeTitle                             { sym"@parameter" },
    --TelescopePromptTitle                       { TelescopeTitle },
    --TelescopeResultsTitle                      { TelescopeTitle },
    --TelescopePreviewTitle                      { TelescopeTitle },
    --TelescopePromptPrefix                      { TelescopeTitle },
    --TelescopePromptBorder                      { fg = hsl(55,100,50), bg = hsl(60,20,13) },
    --MatchParen                                 { fg = hsl(0,0,0), bg = hsl(0,100,100) , gui="bold,underline", },
    --Folded                                     { fg = hsl(55,50,50), bg = hsl(60,20,12)},
    }
end)
---@diagnostic disable
return theme
