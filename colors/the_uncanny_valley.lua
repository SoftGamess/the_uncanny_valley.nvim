local colors = {
--Cursor = { fg = "#000000", bg = "#33ffbb" },
--TermCursor = { link = "Cursor" },
--vCursor = { fg = "#000000", bg = "#009966" },
Normal = {bg = "#150D21" },
--Visual = { bg = "#3d5c52" },
--Comment = {fg = "#666666" },
--["@comment"] = {link = "Comment"},
--["@lsp.type.comment"] = {link = "Comment"},
Constant = {fg = "#c62a37", bold = true },
Character = {link = "Constant"},
["@constant"] = {link = "Constant"},
["@constant.builtin"] = {link = "Constant"},
["@function.builtin"] = {link = "Constant"},
["@constructor"] = {link = "Constant"},
Tag = {link = "Constant"},
Debug = {link = "Constant"},
vimHiAttrib = {link = "Constant" },
SpecialChar = {link = "Constant" },
SpecialComment = {link = "Constant"},
Special = {link = "Constant"},
["@lsp.type.enumMember"] = {link = "Constant"},
Delimiter = {fg = "#ffffff" },
Operator = {link = "Delimiter"},
["@punctuation"] = {link = "Delimiter"},
NvimColon = {link = "Delimiter"},
NvimParenthesis = {link = "Delimiter"},
NvimComma = {link = "Delimiter"},
NvimArrow = {link = "Delimiter"},
["@parameter"] = { fg = "#a14db3" },
["@lsp.type.parameter"] = { fg = "#a14db3" },
Identifier = {fg = "#974dff"},
["@variable"] = {link = "Identifier"},
["@field"] = {link = "Identifier"},
["@property"] = {link = "Identifier"},
["@namespace"] = {link = "Identifier"},
["@lsp.type.property"] = {link = "Identifier"},
["@lsp.type.variable"] = {link = "Identifier"},
NvimIdentifier = {link = "Identifier"},
Keyword = {fg = "#7979ec" },
PreProc = {link = "Keyword"},
["@keyword"] = {link = "Keyword"},
Define = {link = "PreProc"},
Include = {link = "PreProc"},
Macro = {link = "PreProc"},
PreCondit = {link = "PreProc"},
["@preproc"] = {link = "PreProc"},
--Search = {bg = "#3d5c52" },
Type = { link = "Constant" },
["@type"] = {link = "Constant" },
["@lsp.type.type"] = {link = "Constant" },
--NvimNumberPrefix = { fg = "#bfbf40" },
NvimOptionSigil = {link = "Type"},
StorageClass = {link = "Type"},
Structure = {link = "Type"},
Typedef = {link = "Type"},
Function = {fg = "#d025b6" },
["@function"] = {link = "Function"},
["@method"] = {link = "Function"},
["@lsp.type.decorator"] = {link = "Function"},
["@lsp.type.method"] = {link = "Function"},
["@lsp.type.function"] = {link = "Function"},
--String = { fg = "#b46464" },
--["@string"] = { link = "String" },
--NvimString = { link = "String" },
--DiagnosticVirtualTextError = { fg = "#ac3939" },
--DiagnosticVirtualTextWarn = { fg = "#779933" },
--DiagnosticVirtualTextInfo = { fg = "#33cccc" },
--DiagnosticVirtualTextHint = { fg = "#666600" },
--DiagnosticError = { link = "DiagnosticVirtualTextError" },
--DiagnosticWarn = { link = "DiagnosticVirtualTextWarn" },
--DiagnosticInfo = { link = "DiagnosticVirtualTextInfo" },
--DiagnosticHint = { link = "DiagnosticVirtualTextHint" },
--DiagnosticFloatingError = { link = "DiagnosticVirtualTextError" },
--DiagnosticFloatingWarn = { link = "DiagnosticVirtualTextWarn" },
--DiagnosticFloatingInfo = { link = "DiagnosticVirtualTextInfo" },
--DiagnosticFloatingHint = { link = "DiagnosticVirtualTextHint" },
--DiagnosticSignError = { link = "DiagnosticVirtualTextError" },
--DiagnosticSignWarn = { link = "DiagnosticVirtualTextWarn" },
--DiagnosticSignInfo = { link = "DiagnosticVirtualTextInfo" },
--DiagnosticSignHint = { link = "DiagnosticVirtualTextHint" },
--TelescopeBorder = { fg = "#fff799", bg = "#28281b" },
--TelescopeResultBorder = { link = "TelescopeBorder" },
--TelescopePreviewBorder = { link = "TelescopeBorder" },
--TelescopeTitle = { fg = "#fff266" },
--TelescopePromptTitle = { link = "TelescopeTitle" },
--TelescopeResultsTitle = { link = "TelescopeTitle" },
--TelescopePreviewTitle = { link = "TelescopeTitle" },
--TelescopePromptPrefix = { link = "TelescopeTitle" },
--TelescopePromptBorder = { fg = "#ffea00", bg = "#28281b" },
--MatchParen = { fg = "#000000", bg = "#ffcc33", underline = true, bold = true },
--Folded = { fg = "#bfb540", bg = "#252518" },
}


vim.cmd("highlight clear")
vim.cmd("set background=dark")
vim.cmd("set t_Co=256")
vim.cmd("let g:colors_name='the_uncanny_valley'")
vim.cmd("let colors_name='the_uncanny_valley'")

for group, attrs in pairs(colors) do
  vim.api.nvim_set_hl(0, group, attrs)
end
